Alphabet:

a. Upper (A-Z) and lower case letters (a-z) of the English alphabet

       b. Underline character '_', dash character '-'; 

       c. Decimal digits (0-9);

Lexic:

      a.Special symbols, representing:

- operators + - * / <- < <= = >=

- separators [ ] { }  : ; space

- reserved words:

    integer, if, else, boolean, iterate, then, else-if, dynamic-array (however, this was supposed to be the user defined data type), 
    read-integer, show-to-console, TRU, FALS



      b.identifiers

  -a sequence of letters and  digits, such that the first character is a letter; the rule is:

    identifier ::= letter | letter{letter}{digit}{symbol}

    letter ::= "A" | "B" | . ..| "Z" | "a" | ... | "z"

    digit ::= "0" | "1" |...| "9"

    non_null_digit ::= "1"| ... | "9"

    symbol ::= "_" | "-"


      c.constants

    1.integer - rule:

        noconst:="+"no|"-"no|no

        no:=non_null_digit{digit}|"0"

2.boolean - rule:
    booleans:="TRU" | "FALS"

3.character

    character:='letter'|'digit'

4.string

      constchar:="string"

      string:=char{string}

      char:=letter|digit

5.array - rule:
    arr:= value_1{","value_n}

    value_1 := integer | boolean 
    value_n := integer | boolean 


